name: Main Branch CI

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Java | Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle | Setup
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Gradle | Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle | Build and Test
        run: ./gradlew clean build --no-daemon

      - name: GitHub | Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: main-test-results
          path: build/reports/tests/test/
          retention-days: 30

      - name: GitHub | Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: main-build-artifacts
          path: build/libs/
          retention-days: 30

      - name: Gradle | Update Cache
        run: |
          echo "Cache updated with latest dependencies and Gradle wrapper"

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Docker | Setup
        uses: docker/setup-buildx-action@v3

      - name: Docker | Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker | Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/chesire/ccapi
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Docker | Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker | Test
        run: |
          # Pull and test the image we just pushed
          docker pull ghcr.io/chesire/ccapi:latest
          docker run -d --name ccapi-prod-test -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=dev \
            ghcr.io/chesire/ccapi:latest
          
          # Wait for startup and test
          timeout 60s bash -c 'until curl -f http://localhost:8080/actuator/health; do sleep 2; done'
          
          # Verify health
          response=$(curl -s http://localhost:8080/actuator/health)
          if [[ "$response" == *"UP"* ]]; then
            echo "✅ Pushed image is healthy"
          else
            echo "❌ Pushed image health check failed"
            exit 1
          fi

      - name: Docker | Cleanup
        if: always()
        run: |
          docker stop ccapi-prod-test || true
          docker rm ccapi-prod-test || true

name: Pull Request CI

on:
  pull_request:

jobs:
  setup-cache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.gradle-cache.outputs.cache-hit }}
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Java | Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle | Setup
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Gradle | Cache Dependencies
        id: gradle-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle | Download Dependencies
        run: ./gradlew dependencies --no-daemon

  static-analysis:
    runs-on: ubuntu-latest
    needs: setup-cache
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Java | Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle | Setup
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Gradle | Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Ktlint | Code Style Check
        run: ./gradlew ktlintCheck --no-daemon --continue

      - name: SpotBugs | Bug Analysis
        run: ./gradlew spotbugsMain --no-daemon --continue

      - name: GitHub | Upload Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: static-analysis-reports
          path: |
            build/reports/ktlint/
            build/reports/spotbugs/
          retention-days: 7

  test:
    runs-on: ubuntu-latest
    needs: setup-cache
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Java | Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle | Setup
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Gradle | Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle | Run Tests
        run: ./gradlew test --no-daemon --continue

      - name: GitHub | Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: build/reports/tests/test/
          retention-days: 7

  compile:
    runs-on: ubuntu-latest
    needs: setup-cache
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Java | Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle | Setup
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Gradle | Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle | Compile Application
        run: ./gradlew assemble --no-daemon

      - name: GitHub | Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/
          retention-days: 7

  docker-validation:
    runs-on: ubuntu-latest
    needs: [ static-analysis, test, compile ]
    steps:
      - name: Git | Checkout
        uses: actions/checkout@v4

      - name: Docker | Setup
        uses: docker/setup-buildx-action@v3

      - name: Docker | Build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ccapi:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Docker | Start
        run: |
          docker run -d --name ccapi-test -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=dev \
            ccapi:test

      - name: Docker | Wait for Startup
        run: |
          echo "Waiting for application to start..."
          timeout 60s bash -c 'until curl -f http://localhost:8080/actuator/health; do sleep 2; done'

      - name: Docker | API Health Check
        run: |
          response=$(curl -s http://localhost:8080/actuator/health)
          echo "Health check response: $response"
          if [[ "$response" == *"UP"* ]]; then
            echo "✅ Application is healthy"
          else
            echo "❌ Application health check failed"
            exit 1
          fi

      - name: Docker | API Smoke Test
        run: |
          # Test actuator endpoints
          curl -f http://localhost:8080/actuator/health || exit 1
          curl -f http://localhost:8080/actuator/info || exit 1

      - name: Docker | Failure Logs
        if: failure()
        run: docker logs ccapi-test

      - name: Docker | Cleanup
        if: always()
        run: |
          docker stop ccapi-test || true
          docker rm ccapi-test || true
